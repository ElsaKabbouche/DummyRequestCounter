name: CI / CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: dummyrequestcounter

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install project deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - name: Run pytest (unit)
        run: python -m pytest tests/ -v

  integration-tests:
    name: Integration tests (with Redis)
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      redis:
        image: redis:7.0-alpine
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install project deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      - name: Run pytest (integration)
        env:
          REDIS_HOST: redis
          REDIS_PORT: "6379"
        run: python -m pytest tests/ -v

  build-and-test-image:
    name: Build image & smoke-test
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image (load into runner)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: app-under-test:latest
          load: true
      - name: Run container
        run: |
          docker run -d --name ci_app -p 8000:8000 \
            -e REDIS_HOST=host.docker.internal \
            app-under-test:latest
          for i in {1..30}; do
            curl -fsS http://localhost:8000/ && break
            sleep 1
          done
      - name: Smoke test endpoint
        run: curl -v http://localhost:8000/ --fail
      - name: Cleanup
        if: always()
        run: docker rm -f ci_app || true

  publish-to-dockerhub:
    name: Publish image to Docker Hub
    runs-on: ubuntu-latest
    needs: build-and-test-image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build & push image (latest + sha)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
