name: CI / CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: dummyrequestcounter

jobs:
  lint:
    name: Code quality & security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install linters, scanners, and project deps
        run: |
          python -m pip install --upgrade pip
          pip install flake8 mypy bandit
          pip install -r requirements.txt

      - name: Run flake8 (style)
        run: flake8 .

      - name: Run mypy (static typing)
        run: mypy .

      - name: Run bandit (security scan)
        run: bandit -r .

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx
      - run: python -m pytest tests/ -v

  integration-tests:
    name: Integration tests (with Redis)
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      redis:
        image: redis:7.0-alpine
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest httpx
      - env:
          REDIS_HOST: redis
          REDIS_PORT: "6379"
        run: python -m pytest tests/ -v

  build-and-test-image:
    name: Build image & smoke-test
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: image-test:latest
          load: true
      - run: |
          docker run -d --name ci_test_container -p 8000:8000 -e REDIS_HOST=host.docker.internal image-test:latest
          for i in {1..30}; do
